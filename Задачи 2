1. Реализуйте АТД Стек на односвязном списке (forward_list).

2. Используя класс stack из STL решите следующую задачу.
(2565) В новом процессоре PDP-1 (Prime Data Processor) есть специальная операция dec(i,j,k), которая уменьшает все ячейки памяти с i-й по j-ю включительно на целое положительное число k.
Разработчики процессора не сделали операцию для очистки (обнуления) памяти. Необходимо, используя только указанную операцию, очистить nячеек памяти, имеющих заданные начальные значения.
Напишите программу, которая определит наименьшее количество операций для обнуления памяти.
Первая строка ввода содержит одно целое число n(1≤n≤105) – количество обнуляемых ячеек. Вторая строка ввода содержит nцелых чисел ai(0≤ai≤109, 0≤i<n) – начальные значения ячеек памяти.
Вывести одно целое число – минимальное количество операций для обнуления памяти.

Абстрактный тип данных (АТД) — это математическая модель для типов данных, где тип данных определяется поведением (семантикой) с точки зрения пользователя данных, а именно в терминах возможных значений, возможных операций над данными этого типа и поведения этих операций.
Конкретные реализации АТД называются структурами данных. В С++ структуры данных реализуются как классы. В задаче 3 необходимо определить АТД, не нужно писать реализацию класса С++!

3. Определите АТД для хранения информации о таблице базы данных: столбцы (количество и названия столбцов), строки со значениями (все значения в строке таблицы имеют тип string), ключи для получения строк таблицы в некотором порядке (для упрощения ключ включает только один столбец, т.е. ключ - это имя или номер столбца, а строки таблицы можно получать последовательно по одной в порядке возрастания значения в указанном столбце). Перечислите методы АТД, обеспечивающие последовательный доступ к информации и её изменение, аргументы и возвращаемые значения каждого метода с комментариями.

4. Предложите структуры данных для представления АТД из задания 3. Перечислите поля, их типы и комментарии к каждому полю. Укажите оценку эффективности (амортизированную или среднюю) для каждого метода с учетом использованных структур данных. Хранимая в структуре информация не должна дублироваться.
Это отдельная задача. Не объединяете с задачей 3! Не пишите реализацию методов, нужно указать только оценку эффективности.

5. Напишите функцию для прямого (pre-order) обхода бинарного дерева, заданного следующей структурой:
struct node { int value; node *left, *right; };
К каждому значению, хранящемуся в дереве, функция применяет функцию, указанную в качестве аргумента:
void preorder(node *n, void (*f)(int));

6. Используя декартово дерево с неявным ключом из лекций решите следующую задачу.
(1442) Центральным элементом набора из k чисел называется такой элемент, который после сортировки набора будет занимать в нём центральную позицию (то есть позицию номер ⌈k/2⌉, считая с единицы). 
Числа добавляются в изначально пустой набор в заданном порядке. Требуется определить значения центрального элемента после добавления каждого числа.
Входной файла содержит количество чисел n, за которым следуют nцелых чисел ai в порядке их добавления в набор. Выходной файл должен содержать n
 целых чисел - значения центрального элемента после каждого добавления.

7. Используя дерево отрезков решите следующую задачу.
Есть массив, содержащий 100000 элементов, первоначально все элементы равны 0. В массиве производятся изменения элементов и требуется находить суммы части массива с i-го по j-ый элементы.
В первой строке содержится число K(1≤K≤50000) -- количество запросов. Далее следует Kстрок, в каждой строке содержится либо команда "S ijv", где 1≤i≤j≤100000, −100≤v≤100, заменяющая значения элементов с i-го
по j-й массива на v, либо команда "Q i j", где 1≤i≤j≤100000, требующая вывести сумму части массива с i-го по j-ый элементы.
Для каждой команды 'Q' вывести на отдельной строке результат запроса

8. Используя map из STL напишите решение следующей задачи с эффективностью O(NlogN).
Имеется список, первоначально пустой. Команда add v добавляет vв конец списка. Команда remove v удаляет первое вхождение v
 из списка. После каждой команды вывести "1", если в списке нет одинаковых элементов, или "2", если есть одинаковые.

9. Сравните время работы set и unordered_set из STL для операций поиска с количеством элементов N=100,10000,106,107. Ключами являются числа от 1 до 109. 
Результат оформить в виде таблицы, время в ns. Привести код, использованный для измерения времени для одного значения N.

10. Определить АТД Полином, обеспечивающий метод calc для вычисления значения полинома в точке x.
Реализовать полином через представление в виде вектора коэффициентов. В конструкторе задается набор коэффициентов a0,a1,...,an−1. Определить операции + и *.

11. Определить АТД Разреженная матрица, обеспечивающий метод get(i,j) для получения элемента матрицы и set(i,j,v) для изменения (добавления) ненулевого элемента. В конструкторе задаются размеры матрицы.
Реализовать АТД через список координат list<tuple<int,int,double>>. Определить эффективность операций + и * в зависимости от количества ненулевых элементов K.

12. Определить АТД Матрица, обеспечивающий метод [i,j] для доступа к элементам матрицы. В конструкторе задаются размеры матрицы.
Определить операцию *. Сравнить время умножения матриц размером 1000×1000, меняя порядок циклов всеми 6 способами для уровня оптимизации O3. 
Результаты записать в таблицу, в которой будет указан порядок выполнения циклов и время выполнения в мкс.

13. Используя поиск в глубину, определите число компонент связности в графе, задаваемом следующим образом:
Как набор кругов с центром (Xi,Yi) диаметром D. Круги считаются связными, если они накладываются друг на друга или соприкасаются краем.

14. Используя поиск в ширину, решите задачу.
(1343) На доске 8x8 некоторые клетки произвольным образом покрашены в черный цвет (кроме верхнего левого и правого нижнего угла доски). Требуется определить имеется ли путь для шахматного коня из верхнего левого в правый нижний угол доски, не проходящий по черным клеткам, и минимальное количество ходов, требующееся для этого.

15. Напишите функцию для проверки отсутствия циклов в орграфе, заданном через матрицу смежности.

16. На предприятии есть n(2≤n≤10000) отделов, между которыми которыми нужно проложить сеть. Есть m(2≤m≤100000) вариантов для соединения отделов между собой, описываемых тройкой ai,bi,di, где 
ai,bi- номера отделов, di- длина кабеля. Для построения сети необходимо, чтобы все отделы прямо или косвенно через другие отделы были соединены между собой.
Укажите какой алгоритм построения минимального остовного дерева является более эффективным для решения этой задачи и обоснуйте свой выбор.

17. Укажите какой алгоритм нужно использовать для решения задачи и обоснуйте свой выбор. Из каких вершин и ребер граф будет состоять?
Ферзь обошел шахматную доску и вернулся в стартовую клетку, побывав в каждой клетке ровно один раз. Заданы номер стартовой клетки и номера клеток, в которых ферзь побывал, на четных ходах. 
Необходимо найти номера клеток, в которых ферзь был на нечетных ходах, в порядке выполнения ходов.


18. Модифицируйте алгоритм Дейкстры для решения задачи:
В городе есть N площадей, соединенных M дорогами. Известна длина каждой дороги и номера площадей ai, bi (1≤ai,bi≤N), соединенных этой дорогой. Посчитайте количество способов добраться с площади A
до площади B так, чтобы пройденный путь был минимален.

19. Напишите функцию для получения K-го в порядке возрастания числа из двоичного файла, содержащего N (N>109) 64-битных беззнаковых целых чисел. Функции передается имя файла с числами и K.
Можно считывать файл несколько раз. В памяти можно хранить не более 66000 64-битных чисел. Оцените эффективность вашего алгоритма.

20. Сравните время сортировки с помощью sort и timsort для последовательности из 106
 случайных чисел. Результаты оформить в виде таблицы.

21. Напишите функцию поиска подстроки методом Кнута-Мориса-Пратта. Сравните время работы вашей функции с методом find и алгоритмом search с использованием boyer_moore_searcher из <functional> для текста размером 106
 символов и шаблона 104 символов. Результаты представить в виде таблицы. 
Строки: 3 указанных алгоритма. Столбцы: 1) для случайного текста и шаблона; 2) текст 00...00, шаблон 00...01; 3) текст 00...00, шаблон 10...00.

22. Постройте сжатое суффиксное дерево для строки "околоколаколокола" и найдите количеcтво различных подстрок в этой строке. Объясните способ подсчета с использованием суффиксного дерева.

23. Определите необходимые геометрические объекты и напишите следующую функцию
В декартовой системе координат на плоскости заданы координаты концов отрезка и ещё одной точки. Определить расстояние от точки до отрезка.
Для точки использовать класс из лекций и его методы.

24. Напишите функцию для нахождения пересечения двух выпуклых многоугольников. В качестве параметров функции передается два вектора координат вершин многоугольника против часовой стрелки.
Для точки использовать класс из лекций и его методы.

25. Напишите функцию для нахождения решения диофантового уравнения A⋅x+B⋅y=C
, где x≥0,y≥0
. Если существует несколько вариантов, функция должна вернуть вариант с наименьшим x
.
