/*
    Пусть n - количество строк, m - количество столбцов (для удобства)

    Реальзовать можно на массиве массивов строк (vector<vector<string>>),
    для этого нужно будет хранить ещё массив названий столбцов vector<string>.

    Получить Количество столбцов O(1)
    Получить Количество строк O(1)
    Получить название всех столбцов O(1)

    Добавление столбца будет работать так: вставим название столбца в конец массива названий столбцов O(1),
    После этого в конец каждой строки добавим элемент для хранения значения в соответствующем столбце O(n * 1)
    В общем добавление столбца - O(n) (амортизированная)

    Удалить столбец
    Сначала находим наш столбец в списке столбцов O(m), либо O(1) в случае если аргумент - номер столбца,
    после этого удаляем элемент по найденному индексу в массиве O(m).
    Далее нужно удалить по такому же индексу элементы в массивах строк.
    В общем удаление столбца займет O(m или 1) + O(m) + O(n * m) ~ O(n * m)

    Добавить строку - O(1)
    Удалить строку - O(n) (Удалить значение в vector по соотв индексу)
    Получить всю строку - O(1)
    Получить значение у указанной колонки и строки - O(m) (если столбец задан номером то O(1))
*/

/*
    Реализовать можно на хеш-таблицах (unordered_map<string, unordered_map<int, string>>), в таком случае у нас
    появляется возможность хранить id строк (этого не было в задании, но мне кажется это правильно),
    для того чтобы хранить максимальное id нужна будет дополнительная переменная

    Получить Количество столбцов O(1)
    Получить Количество строк O(1)
    Получить название всех столбцов O(m)
    (собрать все названия в вектор и вернуть, можно хранить этот вектор и возвращать за O(1), но тогда нужно будет O(m) памяти)

    Добавление столбца: Создадим пустой unordered_map по ключу - название таблицы, заполнять пустыми значениями не будем,
    будет заполняться само при обращении к пустым элементам
    В общем добавление столбца - O(1)

    Удаление столбца:
    Если задан номер, то находим название строки O(i) (i - указанный номер), далее удаляем unordered_map по ключу -
    найденному названию O(1).
    Удалить столбец O(i) (если не учитывать время которое затратиться на удаление хеш-таблицы)

    Добавить строку - O(m)
    Удалить строку - O(m) - Удалить значения по соотв id в unordered_map каждого столбца
    Получить всю строку - O(m) - собрать все значения в вектор и вернуть
    Получить значение у указанной колонки и строки - O(m) (если столбец задан строкой то O(1))
*/