1. Реализуйте АТД Очередь на vector, используя циклический буфер, с расширением размера в 2 раза при переполнении. Операция pop() должна выполняться за O(1)
, push() за O(1)
 (амортизированная оценка).


2. Используя класс queue из STL решите следующую задачу.
(2736) Вывести простые числа среди чисел от 2 до N
, используя следующий алгоритм:
Первоначально очередь все числа от 2 до N
.

Взять первый элемент X
 из входной очереди и напечатать.
В выходную очередь поместить числа из очереди, которые не кратны X
.
Поменять входную и выходную очередь (swap).
Пока очередь не пуста, то повторять дествия с шага 2.
Ввод содержит одно целое число N
 (2≤N≤100000
).


Абстрактный тип данных (АТД) — это математическая модель для типов данных, где тип данных определяется поведением (семантикой) с точки зрения пользователя данных, а именно в терминах возможных значений, возможных операций над данными этого типа и поведения этих операций.
Конкретные реализации АТД называются структурами данных. В С++ структуры данных реализуются как классы. В задаче 3 необходимо определить АТД, не нужно писать реализацию класса С++!

3. Определите АТД для хранения информации о таблице базы данных: столбцы (количество и названия столбцов), строки со значениями (все значения в строке таблицы имеют тип string), ключи для получения строк таблицы в некотором порядке (для упрощения ключ включает только один столбец, т.е. ключ - это имя или номер столбца, а строки таблицы можно получать последовательно по одной в порядке возрастания значения в указанном столбце). Перечислите методы АТД, обеспечивающие последовательный доступ к информации и её изменение, аргументы и возвращаемые значения каждого метода с комментариями.


4. Предложите структуры данных для представления АТД из задания 3. Перечислите поля, их типы и комментарии к каждому полю. Укажите оценку эффективности (амортизированную или среднюю) для каждого метода с учетом использованных структур данных. Хранимая в структуре информация не должна дублироваться.

Это отдельная задача. Не объединяете с задачей 3! Не пишите реализацию методов, нужно указать только оценку эффективности.


5. Напишите функцию для обратного (post-order) обхода бинарного дерева, заданного следующей структурой:
struct node { int value; node *left, *right; };
К каждому значению, хранящемуся в дереве, функция применяет функцию, указанную в качестве аргумента:
void postorder(node *n, void (*f)(int));


6. Используя декартово дерево из лекций решите следующую задачу.
(2379) Будем называть i
-й элемент последовательности a1, a2, ..., aN
 медианным, если количество элементов, меньших или равных ai
 среди элементов a1, a2, ..., ai−1
, больше или равно количеству элементов, больших или равных ai
 среди элементов ai+1, ai+2, ..., aN
. В последовательности может быть несколько медианных элементов.
Напишите программу, которая находит минимальный индекс медианного элемента.


7. Используя дерево отрезков решите следующую задачу.
(2040) Мебибайту необходимо рассчитать энергетические нагрузки во время светомузыкального шоу. Управление 220
 лампочками происходит следующим образом. Для каждого такта музыкального сопровождения указаны два целых числа, определяющих диапазон номеров лампочек, состояние которых должно измениться на противоположное. Если лампочка была выключена, она должна загореться, а горящая лампочка -- погаснуть. В начальный момент времени все лампочки выключены. Напишите программу, определяющую количество горящих лампочек после выполнения каждой команды.
Первая строка ввода содержит одно целое число N
 (1≤N≤100000
) -- количество команд на переключение состояния лампочек. Далее следует N
 строк, каждая строка содержит два целых числа ai
 и bi
 (1≤ai≤bi≤220
) - команда на переключение.
Вывести N
 строк, в i
-ой строке вывести количество горящих лампочек после i
-ой команды.


8. Используя map из STL напишите решение следующей задачи с эффективностью O(NlogN)
.
Имеется список, первоначально пустой. Команда add v
 добавляет v
 в конец списка. Команда remove v
 удаляет первое вхождение v
 из списка. После каждой команды вывести "1", если в списке нет одинаковых элементов, или "2", если есть одинаковые.


9. Сравните время работы set и unordered_set из STL для операций добавления N
 элементов, где N=100,10000,106,107
. Ключами являются строки из случайных букв от a до z длиной ровно 16. Результат оформить в виде таблицы, время в ns. Привести код, использованный для измерения времени для одного значения N
.


10. Определить АТД Полином, обеспечивающий метод calc для вычисления значения полинома в точке x
 (используйте схему Горнера или барицентрическую форму интерполяционного многочлена Лагранжа).

Реализовать полином через представление в виде вектора коэффициентов. В конструкторе задается набор коэффициентов a0,a1,...,an−1
. Определить операции + и *.


11. Определить АТД Разреженная матрица, обеспечивающий метод get(i,j
) для получения элемента матрицы и set(i,j,v
) для изменения (добавления) ненулевого элемента. В конструкторе задаются размеры матрицы.

Реализовать АТД через список координат list<tuple<int,int,double>>. Определить эффективность операций + и * в зависимости от количества ненулевых элементов K
.


12. Определить АТД Матрица, обеспечивающий метод [i,j
] для доступа к элементам матрицы. В конструкторе задаются размеры матрицы.

Реализовать матрицу через vector размером N⋅M
. Определить операцию +. Сравнить время сложения матриц размером 1000×1000
, меняя порядок циклов (строки/столбцы и столбцы/строки) для уровня оптимизации O3. Результаты записать в таблицу, в которой будет указан порядок выполнения циклов и время выполнения в мкс.


13. Используя поиск в глубину, определите число компонент связности в графе, задаваемом следующим образом:

(945) Как матрица N×M
 из клеток черного ('B') и белого ('W') цветов. Клетки считаются связными, если они имеют общую границу и цвета клеток отличаются (компонента раскрашена в черно-белую клетку как шахматная доска).


14. Используя поиск в ширину, решите задачу.
(1343) На доске 8x8 некоторые клетки произвольным образом покрашены в черный цвет (кроме верхнего левого и правого нижнего угла доски). Требуется определить имеется ли путь для шахматного коня из верхнего левого в правый нижний угол доски, не проходящий по черным клеткам, и минимальное количество ходов, требующееся для этого.


15. Напишите функцию для проверки отсутствия циклов в орграфе, заданном через матрицу смежности.


16. Есть n
 (2≤n≤10000
) городов, заданных своими координатами (xi, yi)
, i ∈ 1... n
, а также m
 (2≤m≤100000
) дорог, соединяющих города. Нужно построить дополнительное число дорог (возможно, нулевое), так чтобы из любого города можно было доехать в любой другой, двигаясь по дорогам. При этом сумма длин построенных дорог должна быть минимально возможной.
Укажите какой алгоритм построения минимального остовного дерева является более эффективным для решения этой задачи и обоснуйте свой выбор.


17. Укажите какой алгоритм нужно использовать для решения задачи и обоснуйте свой выбор. Из каких вершин и ребер граф будет состоять?
О последовательности A1,...,AN
 (1≤N≤200
), в которой каждое число от 1 до N
 встречается ровно один раз, известно M
 (0≤M≤40000
) ограничений вида:
1 i
 j
 x
 – наибольшее число в позициях между i
 и j
 (включительно) равно x

2 i
 j
 y
 – наименьшее число в позициях между i
 и j
 (включительно) равно y

Выведите любой вариант для такой последовательности.


18. Модифицируйте алгоритм Дейкстры для решения задачи:
В городе есть N
 площадей, соединенных M
 дорогами. Известна длина каждой дороги и номера площадей ai
, bi
 (1≤ai,bi≤N
), соединенных этой дорогой. Посчитайте количество способов добраться с площади A
 до площади B
 так, чтобы пройденный путь был минимален.


19. Напишите функцию для поиска строки в большом текстовом файле. Функции передается имя файла с текстом и строка длиной до 106
 символов. Вы можете хранить в памяти не более 2⋅106
 символов из файла и можете считывать файл только последовательно. Оцените эффективность вашего алгоритма.


20. Сравните время сортировки с помощью sort, stable_sort, make_heap/sort_heap для вектора из 106
 случайных чисел. Результаты оформить в виде таблицы.


21. Напишите функцию поиска подстроки методом Хорспула. Сравните время работы вашей функции с методом find и алгоритмом search с использованием boyer_moore_searcher из <functional> для текста размером 106
 символов и шаблона 104
 символов. Результаты представить в виде таблицы. Строки: 3 указанных алгоритма. Столбцы: 1) для случайного текста и шаблона; 2) текст 00...00, шаблон 00...01; 3) текст 00...00, шаблон 10...00.


22. Постройте сжатое суффиксное дерево для строки "senselessness" и найдите количеcтво различных подстрок в этой строке. Объясните способ подсчета с использованием суффиксного дерева.


23. Определите необходимые геометрические объекты и напишите следующую функцию
В декартовой системе координат на плоскости заданы координаты вершин треугольника и ещё одной точки. Определить, принадлежит ли эта точка треугольнику.

Для точки использовать класс из лекций и его методы.


24. Напишите функцию для проверки принадлежности точки невыпыклому многоугольнику. В качестве параметров функции передаются координаты точки и вектор координат вершин многоугольника против часовой стрелки.

Для точки использовать класс из лекций и его методы.


25. Напишите функцию для нахождения решения диофантового уравнения A⋅x+B⋅y=C
, где x≥0,y≥0
. Если существует несколько вариантов, функция должна вернуть вариант с наименьшим x
.
