№1 Реализуйте АТД Стек на односвязном списке (forward_list).

№2 
Используя класс queue из STL решите следующую задачу.
(2736) Вывести простые числа среди чисел от 2 до N, используя следующий алгоритм:
Первоначально очередь все числа от 2 до N.
1.	Взять первый элемент X из входной очереди и напечатать.
2.	В выходную очередь поместить числа из очереди, которые не кратны X.
3.	Поменять входную и выходную очередь (swap).
4.	Пока очередь не пуста, то повторять дествия с шага 2.
Ввод содержит одно целое число N(2≤N≤100000).

№3 
Определите АТД для хранения информации о таблице базы данных: столбцы (количество и названия столбцов), строки со значениями (все значения в строке таблицы имеют тип string), ключи для получения строк таблицы в некотором порядке (для упрощения ключ включает только один столбец, т.е. ключ - это имя или номер столбца, а строки таблицы можно получать последовательно по одной в порядке возрастания значения в указанном столбце). Перечислите методы АТД, обеспечивающие последовательный доступ к информации и её изменение, аргументы и возвращаемые значения каждого метода с комментариями.

№4 
Предложите структуры данных для представления АТД из задания 3. Перечислите поля, их типы и комментарии к каждому полю. Укажите оценку эффективности (амортизированную или среднюю) для каждого метода с учетом использованных структур данных. Хранимая в структуре информация не должна дублироваться.
Это отдельная задача. Не объединяете с задачей 3! Не пишите реализацию методов, нужно указать только оценку эффективности.

№5 
Напишите функцию для прямого (pre-order) обхода бинарного дерева, заданного следующей структурой:
struct node { int value; node *left, *right; };
К каждому значению, хранящемуся в дереве, функция применяет функцию, указанную в качестве аргумента:
void preorder(node *n, void (*f)(int));

№6 
Используя декартово дерево с неявным ключом из лекций решите следующую задачу.
(1442) Центральным элементом набора из k чисел называется такой элемент, который после сортировки набора будет занимать в нём центральную позицию (то есть позицию номер ⌈k/2⌉, считая с единицы). Числа добавляются в изначально пустой набор в заданном порядке. Требуется определить значения центрального элемента после добавления каждого числа.
Входной файла содержит количество чисел n, за которым следуют n целых чисел ai в порядке их добавления в набор. Выходной файл должен содержать n целых чисел – значения центрального элемента после каждого добавления.

№7 
Используя дерево отрезков решите следующую задачу.
(1969) Дана последовательность из N целых неотрицательных чисел. Ваша задача заключается в том, чтобы уметь выполнять три вида запросом:

1. + l r  d  -- прибавить ко всем числам на отрезке от l до r  число d (1≤ l ≤ r ≤ N, 0 ≤ d ≤ 109);

2. * l  r  d  -- умножить все числа на отрезке от l  до r  число d (1 ≤ l ≤ r ≤ N, 0≤d≤109);

3. ? p  -вывести значение p-го элемента в этой последовательности по модулю 109+7 (1 ≤ p ≤ N).

В первой строке входного файла задано целое число N. В следующей строке задано N целых неотрицательиых чисел, элементы последовательности. Каждое из этих чисел не превосходит 109. В третьей строке задано число ММ -- количество запросов. В последующих M строках заданы запросы, соответствующие описанию из условия.
Для каждого запроса третьего вида выведите ответ на одной строке, в том порядке, в котором заданы запросы.


№8 
Используя map из STL напишите решение следующей задачи с эффективностью O(NlogN).
Имеется список, первоначально пустой. Команда add v добавляет v в конец списка. Команда remove v удаляет первое вхождение v из списка. После каждой команды вывести "1", если в списке нет одинаковых элементов, или "2", если есть одинаковые.

№9
Сравните время работы set и unordered_set из STL для операций поиска с количеством элементов N=100,10000,106,107. Ключами являются числа от 1 до 109. Результат оформить в виде таблицы, время в ns. Привести код, использованный для измерения времени для одного значения N.

№10
Определить АТД Полином, обеспечивающий метод calc для вычисления значения полинома в точке x.
Реализовать полином через представление на значениях в точках. В конструкторе задается набор значений y0,...,yn−1, x0 и Δx(xi=x0+i⋅Δx). Определить операцию +.

№11
Определить АТД Разреженная матрица, обеспечивающий метод get(i,j) для получения элемента матрицы и set(i,j,v) для изменения (добавления) ненулевого элемента. В конструкторе задаются размеры матрицы.
Реализовать АТД через список списков vector<list<pair<int,double>>>. Определить эффективность операций + и * в зависимости от количества ненулевых элементов K.


№12
Определить АТД Матрица, обеспечивающий метод [i,j] для доступа к элементам матрицы. В конструкторе задаются размеры матрицы.
Определить операцию *. Выполнить возведение матрицы N×N из целых чисел 0 и 1 в степень K по модулю 2: AK(mod2).


№13
Используя поиск в глубину, определите число компонент связности в графе, задаваемом следующим образом:
Как набор кругов с центром (Xi,Yi) диаметром D. Круги считаются связными, если они накладываются друг на друга или соприкасаются краем.

№14
Используя поиск в ширину, решите задачу.
(1310) Королевство Флатландия имеет форму прямоугольника размером N×M клеток. Для защиты Флатландия в нескольких клетках были построены крепости, в которых размещены войска. При нападении войско из крепостей пешим маршем отправляется к месту появления врага. Войско может переходить только в соседнюю клетку, имеющую общую границу с клеткой, где находится войско. Такой переход выполняется за 1 единицу времени. Некоторые клетки Флатландии, в которых находятся леса и озера, горы и равнины, являются непроходимыми для войск. Король хочет выяснить за какое минимальное время войска могут гарантированно добраться до остальных клеток страны.
Напишите программу, которая вычисляет это время для заданной карты Флатландии.
Первая строка ввода содержит два целых числа N и M – размеры Флатландии. Далее следует N строк, содержащих по M символов '#' (непроходимая для войск клетка), '.' (удобная для передвижения войск клетка) и '*' (клетка с крепостью). Гарантируется, что войска могут добраться до всех клеток, обозначенных символом '.', из какой-либо крепости.
Вывести одно целое число – минимальное время для достижения войсками любой клетки страны, обозначенной символом '.'.

№15
Напишите функцию для проверки отсутствия циклов в орграфе, заданном через матрицу смежности.

№16
Есть n (2≤n≤10000) городов, заданных своими координатами (xi, yi), i ∈ 1... n, а также m (2≤m≤100000) дорог, соединяющих города. Нужно построить дополнительное число дорог (возможно, нулевое), так чтобы из любого города можно было доехать в любой другой, двигаясь по дорогам. При этом сумма длин построенных дорог должна быть минимально возможной.
Укажите какой алгоритм построения минимального остовного дерева является более эффективным для решения этой задачи и обоснуйте свой выбор.


№17
Укажите какой алгоритм нужно использовать для решения задачи и обоснуйте свой выбор. Из каких вершин и ребер граф будет состоять?
О последовательности A1,...,AN (1≤N≤200), в которой каждое число от 1 до N встречается ровно один раз, известно M (0≤M≤40000) ограничений вида:
1 i j x – наибольшее число в позициях между i и j (включительно) равно x
2 i j y – наименьшее число в позициях между i и j (включительно) равно y
Выведите любой вариант для такой последовательности.

№18
Модифицируйте алгоритм Дейкстры для решения задачи:
В некоторой игре участвует N игроков, каждому из которых принадлежит один город. Между городами проложено M дорог, каждая из которых соединяет некоторые два города и принадлежит одному из игроков (не обязательно владельцу города, которые она соединяет). Чтобы захватить город противника, правитель города S должен довести свою армию до города T. Все дороги, по которым перемещаются войска, должны принадлежать игроку. По правилам игры игрок может купить любую дорогу у ее владельца за определенную плату. У игрока S нет в казне денег, поэтому сначала ему придется продать некоторые свои дороги (разумеется, после этого он не сможет провести по ним войска). Помогите игроку S выяснить, какие дороги следует продать, а какие купить, чтобы довести войска от города S до города T. Все операции продажи и покупки дорог надо осуществить до начала похода, пока другие игроки не догадались о воинственных намерениях правителя города S.
Для каждой дороги задаются номера городов ai, bi (1≤ai,bi≤N), стоимость дороги ci (1≤ci≤10000) и номер владельца oi (1≤oi≤N).

№19
 Напишите функцию для поиска большой строки в большом текстовом файле. Функции передается имя файла с текстом и имя файла со строкой. Можно открывать один файл несколько раз и перемещать позицию чтения в файле. Нельзя загрузить в память полностью всю строку или текст. Оцените эффективность вашего алгоритма.

№20
Сравните время сортировки с помощью sort и поразрядной сортировки для последовательности из 106 случайных беззнаковых целых чисел (за 1 разряд брать 1 байт числа). Результаты оформить в виде таблицы.

№21
Напишите функцию поиска подстроки методом Хорспула. Сравните время работы вашей функции с методом find и алгоритмом search с использованием boyer_moore_searcher из <functional> для текста размером 106 символов и шаблона 104 символов. Результаты представить в виде таблицы. Строки: 3 указанных алгоритма. Столбцы: 1) для случайного текста и шаблона; 2) текст 00...00, шаблон 00...01; 3) текст 00...00, шаблон 10...00.

№22
Постройте сжатое суффиксное дерево для строки "околоколаколокола" и найдите количеcтво различных подстрок в этой строке. Объясните способ подсчета с использованием суффиксного дерева.

№23
Определите необходимые геометрические объекты и напишите следующую функцию
В декартовой системе координат на плоскости заданы окружность и точка вне неё. Найдите касательные к окружности, проходящие через точку.


№24
Напишите функцию для проверки принадлежности точки невыпыклому многоугольнику. В качестве параметров функции передаются координаты точки и вектор координат вершин многоугольника против часовой стрелки.

№25
Напишите функцию разложения числа на простые множители.